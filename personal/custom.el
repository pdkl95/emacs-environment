(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(abbrev-file-name "/home/endymion/.emacs.d/var/abbrev_defs")
 '(adaptive-fill-mode nil)
 '(add-log-full-name "Brent Sanders")
 '(add-log-mailing-address "pdkl95@thoughtnoise.net")
 '(ag-highlight-search t)
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector [solarized-bg red green yellow blue magenta cyan solarized-fg])
 '(ansi-term-color-vector [unspecified "#FFFFFF" "#d15120" "#5f9411" "#d2ad00" "#6b82a7" "#a66bab" "#6b82a7" "#505050"] t)
 '(auto-save-file-name-transforms (quote ((".*" "~/var/emacs/autosave/" t))))
 '(auto-save-list-file-prefix "~/.emacs.d/var/auto-save-list/saves-")
 '(background-color "#fdf6e3")
 '(background-mode light)
 '(backup-directory-alist (quote ((".*" . "~/var/emacs/backups/"))))
 '(buffers-menu-max-size 30)
 '(buffers-menu-show-directories nil)
 '(buffers-menu-show-status nil)
 '(c-echo-syntactic-information-p t)
 '(change-log-default-name "ChangeLog")
 '(clean-buffer-list-delay-general 1)
 '(coffee-command "/usr/bin/coffee")
 '(coffee-js-mode (quote js3-mode) t)
 '(coffee-tab-width 2)
 '(column-number-mode t)
 '(compilation-ask-about-save nil)
 '(compilation-auto-jump-to-first-error nil)
 '(compilation-save-buffers-predicate nil)
 '(compilation-scroll-output t)
 '(compilation-skip-threshold 2)
 '(compilation-skip-visited t)
 '(compilation-window-height 3)
 '(completions-format (quote vertical))
 '(cursor-color "#657b83")
 '(custom-buffer-done-kill t)
 '(custom-enabled-themes (quote (pdklburn)))
 '(custom-safe-themes (quote ("65e05a8630f98308e8e804d3bbc0232b02fe2e8d24c1db358479a85f3356198d" "e9a1226ffed627ec58294d77c62aa9561ec5f42309a1f7a2423c6227e34e3581" "c56fd34f8f404e6e9e6f226c6ce2d170595acc001741644d22b49e457e3cd497" "8281168b824a806489ca7d22e60bb15020bf6eecd64c25088c85b3fd806fc341" "5cb805901c33a175f7505c8a8b83c43c39fb84fbae4e14cfb4d1a6c83dabbfba" "944f3086f68cc5ea9dfbdc9e5846ad91667af9472b3d0e1e35a9633dcab984d5" "159bb8f86836ea30261ece64ac695dc490e871d57107016c09f286146f0dae64" "be7eadb2971d1057396c20e2eebaa08ec4bfd1efe9382c12917c6fe24352b7c1" "6bc195f4f8f9cf1a4b1946a12e33de2b156ce44e384fbc54f1bae5b81e3f5496" "27b53b2085c977a8919f25a3a76e013ef443362d887d52eaa7121e6f92434972" "b04bb214490c5bbb2923b3b9ab707ae22b4fd5c4649bac84d80a34b7d2b3fe97" "78b1c94c1298bbe80ae7f49286e720be25665dca4b89aea16c60dacccfbb0bca" "073dbd38a7ce4f316eba2b0c9be8193d8ba58c0f0a399ce4c02aeda812fecf3f" "7b4a6cbd00303fc53c2d486dfdbe76543e1491118eba6adc349205dbf0f7063a" "5e1d1564b6a2435a2054aa345e81c89539a72c4cad8536cfe02583e0b7d5e2fa" "f38dd27d6462c0dac285aa95ae28aeb7df7e545f8930688c18960aeaf4e807ed" "fca8ce385e5424064320d2790297f735ecfde494674193b061b9ac371526d059" "4be2645396d79e94d37867be5a7f41b66e05fa81c5b266d705a7edd7fb785302" "71b172ea4aad108801421cc5251edb6c792f3adbaecfa1c52e94e3d99634dee7" "8b49009d04730bc5d904e7bb5c7ff733f3f9615c3d6b3446eca0766e6da2bea1" "6615e5aefae7d222a0c252c81aac52c4efb2218d35dfbb93c023c4b94d3fa0db" "72cc9ae08503b8e977801c6d6ec17043b55313cda34bcf0e6921f2f04cf2da56" "967c58175840fcea30b56f2a5a326b232d4939393bed59339d21e46cf4798ecf" "8b85c9d00614c1ef296b3e70644c4bad96cf05e1fbb332113180dada305e15e7" "418617eeb1c7de5787a3ed5da166db752fefdc83e69659c6639ea15204d29c95" "6938c51c0a89f078c61b979af23ae4c32204458f16a6a08c1a683ab478a7bc6b" "6cfe5b2f818c7b52723f3e121d1157cf9d95ed8923dbc1b47f392da80ef7495d" "117069e595a587a5bec38c3e5fffad95f303b9a6d0ed83aae4eae47362bc8515" "1e7e097ec8cb1f8c3a912d7e1e0331caeed49fef6cff220be63bd2a6ba4cc365" "fc5fcb6f1f1c1bc01305694c59a1a861b008c534cae8d0e48e4d5e81ad718bc6" "211bb9b24001d066a646809727efb9c9a2665c270c753aa125bace5e899cb523" "06f0b439b62164c6f8f84fdda32b62fb50b6d00e8b01c2208e55543a6337433a" "628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" "bb08c73af94ee74453c90422485b29e5643b73b05e8de029a6909af6a3fb3f58" "1b8d67b43ff1723960eb5e0cba512a2c7a2ad544ddb2533a90101fd1852b426e" "82d2cac368ccdec2fcc7573f24c3f79654b78bf133096f9b40c20d97ec1d8016" "4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" "4aee8551b53a43a883cb0b7f3255d6859d766b6c5e14bcb01bed572fcbef4328" "1e424534b1c67f102b0454e7d39c53a05e9bc53efc8c11d231afe569e50927af" "a60c86f793e9f6926044e53ddfe48c3443dd4e04" "d818d364712b551c535b952b3aa089c5941ef284" "a677b91598bc31bc159847fa2a3c0f525c7bf5bb" "39327baac0e924fc06c561986ed6fff862df8e1d" "69546801bd9c98eeb7246a3d39497abeced1d11e" "bf5b179a9e82b3e818b938a041363632a8b4f805" "7fe1e3de3e04afc43f9a3d3a8d38cd0a0efd9d4c" "b360396afb94cd6b0b05440c6178d3c78a2acf00" "e254937cba0f82c2d9eb3189a60748df9e486522" "69349beba557a65bb06f89b28b8fd2890c742f07" "d14db41612953d22506af16ef7a23c4d112150e5" "1caf2982385495191d2425ee51fc791ae75cde47" "1f392dc4316da3e648c6dc0f4aad1a87d4be556c" "485737acc3bedc0318a567f1c0f5e7ed2dfde3fb" "1440d751f5ef51f9245f8910113daee99848e2c0" "5f573dfd6ef8f90d0c33de7d482daba81399f276" default)))
 '(delete-active-region (quote kill))
 '(display-buffer-reuse-frames t)
 '(doc-view-continuous t)
 '(el-get-growl-notify "")
 '(el-get-post-error-hooks (quote (el-get-post-error-notification (lambda (p &optional data) (el-get-event-occurred p (quote error) data)) el-get-mark-failed)))
 '(el-get-post-update-hooks (quote (el-get-post-update-message (lambda (p &optional data) (el-get-event-occurred p (quote update) data)))))
 '(electric-pair-mode nil)
 '(enable-local-eval t)
 '(enable-local-variables :all)
 '(enh-ruby-bounce-deep-indent t)
 '(enh-ruby-hanging-brace-deep-indent-level 1)
 '(enh-ruby-hanging-paren-deep-indent-level 1)
 '(eshell-after-prompt-hook (quote (eshell-show-maximum-output)))
 '(eshell-banner-message "")
 '(eshell-before-prompt-hook (quote (eshell-begin-on-new-line)))
 '(eshell-ls-initial-args (quote ("-h")))
 '(eshell-modules-list (quote (eshell-alias eshell-basic eshell-cmpl eshell-dirs eshell-glob eshell-hist eshell-ls eshell-pred eshell-prompt eshell-script eshell-term eshell-unix eshell-xtra)))
 '(eshell-output-filter-functions (quote (eshell-handle-ansi-color eshell-handle-control-codes eshell-postoutput-scroll-to-bottom eshell-handle-control-codes eshell-handle-ansi-color eshell-watch-for-password-prompt)))
 '(eshell-plain-echo-behavior t)
 '(eshell-visual-commands (quote ("vi" "screen" "top" "htop" "less" "more" "lynx" "ncftp" "git")))
 '(esup-user-init-files (quote ("~/.emacs.d/init.el")))
 '(fci-rule-character-color "#d9d9d9")
 '(fci-rule-color "#d9d9d9")
 '(ffap-require-prefix t)
 '(file-name-at-point-functions nil)
 '(file-precious-flag t)
 '(find-file-run-dired nil)
 '(find-file-visit-truename t)
 '(flymake-log-file-name "~/.emacs.d/var/flymake.log")
 '(flyspell-issue-message-flag nil)
 '(foreground-color "#657b83")
 '(fringe-mode (quote (4 . 4)) nil (fringe))
 '(global-hl-line-mode nil)
 '(global-pretty-lambda-mode t)
 '(gnuplot-display-process (quote frame))
 '(gnuplot-gui-fontname-list (quote (" " "\"terminus\"" "\"Helvetica\"" "\"Times-Roman\"")))
 '(gnuplot-info-display (quote frame))
 '(google-wrap-in-quotes t)
 '(graphviz-dot-auto-indent-on-braces t)
 '(graphviz-dot-indent-width 4)
 '(hardhat-basename-editable-regexps nil)
 '(hardhat-basename-protected-regexps (quote ("\\.orig\\'")))
 '(hardhat-bof-content-editable-regexps nil)
 '(hardhat-bof-content-protected-regexps nil)
 '(hardhat-buffer-editable-functions nil)
 '(hardhat-buffer-protected-functions nil)
 '(hardhat-fullpath-editable-regexps (quote ("/\\.git/\\(?:COMMIT_EDITMSG\\|MERGE_MSG\\|SQUASH_MSG\\|rebase-merge/git-rebase-todo\\|description\\|hooks/\\|config\\|GHI_ISSUE\\)\\'")))
 '(hardhat-fullpath-protected-regexps (quote ("~/\\.cpan/" "~/\\.cabal/" "~/\\.npm/" "~/\\.rvm/" "/[._]build/" "/\\.bzr/" "/\\.coverage/" "/\\.git/" "/\\.hg/" "/\\.rspec/" "/\\.sass-cache/" "/\\.svn/" "/_darcs/" "/CVS/" "/pm_to_blib/")))
 '(ido-auto-merge-delay-time 3.7)
 '(ido-default-buffer-method (quote selected-window))
 '(ido-enable-dot-prefix nil)
 '(ido-enable-prefix nil)
 '(ido-enable-tramp-completion t)
 '(ido-everywhere nil)
 '(ido-max-window-height 3)
 '(ido-record-ftp-work-directories nil)
 '(ido-rotate-file-list-default t)
 '(ido-save-directory-list-file "~/.emacs.d/var/ido.last")
 '(ido-use-url-at-point t)
 '(indicate-empty-lines t)
 '(inhibit-startup-echo-area-message "endymion")
 '(initial-buffer-choice t)
 '(initial-scratch-message nil)
 '(jabber-account-list (quote (("emacs@thoughtnoise.net" (:password . "PEk7cMcoPvjeah3W") (:network-server . "localhost") (:port . 5222) (:connection-type . network)))))
 '(jabber-backlog-days nil)
 '(jabber-mode-line-mode t)
 '(js-enabled-frameworks (quote (javascript)))
 '(js2-allow-rhino-new-expr-initializer nil)
 '(js2-include-rhino-externs nil)
 '(js3-allow-keywords-as-property-names nil)
 '(js3-allow-rhino-new-expr-initializer t)
 '(js3-auto-indent-p t)
 '(js3-compact-expr t)
 '(js3-compact-infix t)
 '(js3-compact-list t)
 '(js3-consistent-level-indent-inner-bracket t)
 '(js3-curly-indent-offset 0)
 '(js3-enter-indents-newline t)
 '(js3-highlight-external-variables nil)
 '(js3-highlight-level 3)
 '(js3-include-gears-externs nil)
 '(js3-include-rhino-externs t)
 '(js3-indent-dots t)
 '(js3-language-version 180)
 '(js3-lazy-commas t)
 '(js3-lazy-dots nil)
 '(js3-lazy-operators nil)
 '(js3-mode-escape-quotes nil)
 '(js3-pretty-vars t)
 '(js3-rebind-eol-bol-keys t)
 '(js3-skip-preprocessor-directives t)
 '(kept-old-versions 5)
 '(kill-do-not-save-duplicates t)
 '(lua-indent-level 3)
 '(markdown-command "redcarpet")
 '(midnight-delay 36000)
 '(midnight-mode t nil (midnight))
 '(mouse-avoidance-mode (quote banish) nil (avoid))
 '(mpc-mpd-music-directory "/mp3/albums")
 '(nroff-electric-mode t)
 '(nxhtml-skip-welcome t)
 '(nxhtml-validation-headers-check (quote html-empty))
 '(nxml-sexp-element-flag t)
 '(org-remember-interactive-interface (quote outline))
 '(popwin-mode t)
 '(popwin:popup-window-height 8)
 '(prelude-disable-arrow-navigation nil)
 '(prelude-start-slime-automatically nil)
 '(pretty-lambda-auto-modes (quote (lisp-mode emacs-lisp-mode lisp-interaction-mode scheme-mode ruby-mode)))
 '(pretty-symbol-categories (quote (lambda\ relational)))
 '(pretty-symbol-patterns (quote ((955 lambda "\\<lambda\\>" (emacs-lisp-mode inferior-lisp-mode lisp-mode python-mode ruby-mode)) (402 lambda "\\<function\\>" (js-mode)) (8800 relational "!=" (c-mode c++-mode go-mode java-mode js-mode perl-mode cperl-mode python-mode ruby-mode)) (8800 relational "/=" (emacs-lisp-mode inferior-lisp-mode lisp-mode)) (8805 relational ">=" (c-mode c++-mode go-mode java-mode js-mode perl-mode cperl-mode python-mode ruby-mode emacs-lisp-mode inferior-lisp-mode lisp-mode)) (8804 relational "<=" (c-mode c++-mode go-mode java-mode js-mode perl-mode cperl-mode python-mode ruby-mode emacs-lisp-mode inferior-lisp-mode lisp-mode)) (8743 logical "&&" (c-mode c++-mode go-mode java-mode js-mode perl-mode cperl-mode python-mode ruby-mode)) (8743 logical "\\<and\\>" (emacs-lisp-mode inferior-lisp-mode lisp-mode)) (8744 logical "||" (c-mode c++-mode go-mode java-mode js-mode perl-mode cperl-mode python-mode ruby-mode)) (8744 logical "\\<or\\>" (emacs-lisp-mode inferior-lisp-mode lisp-mode)) (172 logical "\\<not\\>" (emacs-lisp-mode inferior-lisp-mode lisp-mode)))))
 '(quack-default-program "guile")
 '(read-buffer-completion-ignore-case t)
 '(read-file-name-completion-ignore-case t)
 '(recentf-auto-cleanup "8:00am")
 '(recentf-max-menu-items 16 t)
 '(recentf-max-saved-items 64 t)
 '(recentf-save-file "~/.emacs.d/var/recentf" t)
 '(remember-annotation-functions nil)
 '(remember-data-file "~/.org/notes.org")
 '(remember-handler-functions (quote (org-remember-handler)))
 '(remember-in-new-frame t)
 '(remember-mode-hook (quote (flyspell-mode turn-on-auto-fill org-remember-apply-template)))
 '(remember-run-all-annotation-functions-flag nil)
 '(require-final-newline t)
 '(rng-schema-locating-files (quote ("schemas.xml" "/usr/share/emacs/24.0.94/etc/schema/schemas.xml" "/home/endymion/.emacs.d/rnc/html5/html5-schemas.xml")))
 '(ruby-block-highlight-toggle t)
 '(ruby-deep-indent-paren t)
 '(ruby-electric-newline-before-closing-bracket t)
 '(ruby-electric-simple-keywords-re "\\(begin\\|c\\(?:ase\\|lass\\)\\|d\\(?:ef\\|o\\)\\|for\\|if\\|module\\|un\\(?:less\\|til\\)\\|while\\)")
 '(ruby-end-insert-newline t)
 '(safe-local-variable-values (quote ((comp . make) (encoding . utf-8))))
 '(save-completions-file-name "~/.emacs.d/var/completions")
 '(save-place-file "~/.emacs.d/var/saveplace")
 '(savehist-file "~/.emacs.d/var/savehist")
 '(scheme-mit-dialect nil)
 '(scheme-program-name "guile")
 '(scroll-bar-mode (quote right))
 '(scss-compile-at-save nil)
 '(sh-backslash-align t)
 '(sh-backslash-column 72)
 '(show-paren-mode t)
 '(show-paren-style (quote parenthesis))
 '(size-indication-mode t)
 '(smex-auto-update t)
 '(smex-key-advice-ignore-menu-bar t)
 '(smex-save-file "~/.emacs.d/var/smex-items")
 '(sml/active-background-color "#131313")
 '(sml/active-foreground-color "#a47bff")
 '(sml/col-number-format " %2c")
 '(sml/inactive-background-color "#222222")
 '(sml/line-number-format "%3l  ")
 '(sml/numbers-separator ",")
 '(sml/show-battery nil)
 '(sql-database "postgresql")
 '(sql-electric-stuff (quote semicolon))
 '(sql-pop-to-buffer-after-send-region t)
 '(sql-product (quote postgres))
 '(sql-user "endymion")
 '(tcl-electric-hash-style (quote smart))
 '(text-mode-hook (quote (turn-on-auto-fill prelude-turn-on-flyspell text-mode-hook-identify)))
 '(tool-bar-mode nil)
 '(tramp-auto-save-directory "~/var/emacs/autosave-tramp")
 '(tramp-default-host "thoughtnoise.net")
 '(tramp-default-method "scpc")
 '(tramp-smb-conf nil)
 '(unicode-progress-reporter-type "Horizontal Blocks")
 '(url-cache-directory "~/.emacs.d/var/url/cache")
 '(url-cookie-file "~/.emacs.d/var/url/cookies")
 '(url-history-file "~/.emacs.d/var/url/history")
 '(visual-line-fringe-indicators (quote (left-curly-arrow right-curly-arrow)))
 '(whitespace-action (quote (auto-cleanup warn-if-read-only)))
 '(whitespace-display-mappings nil)
 '(whitespace-style (quote (trailing empty)))
 '(widget-choice-toggle t)
 '(windmove-wrap-around t)
 '(x-gtk-whole-detached-tool-bar nil)
 '(xterm-mouse-mode t))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Dina" :foundry "unknown" :slant normal :weight normal :height 107 :width normal))))
 '(cperl-array-face ((t (:foreground "khaki" :box (:line-width 1 :color "#1A063B" :style released-button) :weight normal))) t)
 '(cperl-hash-face ((t (:foreground "#F4BD85" :box (:line-width 1 :color "#3E0C07" :style pressed-button) :slant normal :weight normal))) t)
 '(cperl-nonoverridable-face ((t (:foreground "light green"))) t)
 '(diff-added ((t (:inherit diff-changed :foreground "SpringGreen2"))) t)
 '(diff-changed ((t (:foreground "LightGoldenrod2"))) t)
 '(diff-file-header ((t (:background "turquoise4" :weight bold))) t)
 '(diff-header ((t (:background "dark slate blue"))) t)
 '(diff-refine-change ((t (:background "DeepSkyBlue4"))) t)
 '(diff-removed ((t (:inherit diff-changed :foreground "firebrick2"))) t)
 '(enh-ruby-op-face ((t (:foreground "#0096C3"))) t)
 '(eshell-ls-archive ((t (:foreground "orange red"))) t)
 '(eshell-ls-backup ((t (:background "gray13" :foreground "orchid4"))) t)
 '(eshell-ls-clutter ((t (:foreground "pink2"))) t)
 '(eshell-ls-directory ((t (:foreground "RoyalBlue2"))) t)
 '(eshell-ls-executable ((t (:foreground "Green"))) t)
 '(eshell-ls-missing ((t (:background "firebrick2" :foreground "black"))) t)
 '(eshell-ls-product ((t (:foreground "slate blue"))) t)
 '(eshell-ls-special ((t (:background "olive drab" :foreground "khaki1" :underline "dark slate gray"))) t)
 '(eshell-ls-symlink ((t (:foreground "Cyan"))) t)
 '(eshell-prompt ((t (:foreground "DodgerBlue2"))) t)
 '(fg:erc-color-face1 ((t (:foreground "gray8"))) t)
 '(fixed-pitch ((t (:inherit default))))
 '(sml/col-number ((t (:inherit sml/global :foreground "SlateBlue3"))))
 '(sml/filename ((t (:inherit sml/global))))
 '(sml/global ((t (:foreground "#a47bff" :box (:line-width 1 :color "#5276b4")))))
 '(sml/line-number ((t (:inherit sml/global :foreground "#30ccee" :weight normal))))
 '(sml/modes ((t (:inherit sml/global :foreground "#6c60ff")))))
