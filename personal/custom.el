(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(abbrev-file-name "/home/endymion/.emacs.d/var/abbrev_defs")
 '(adaptive-fill-mode nil)
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector [solarized-bg red green yellow blue magenta cyan solarized-fg])
 '(auto-save-file-name-transforms (quote ((".*" "~/var/emacs/autosave/" t))))
 '(auto-save-list-file-prefix "~/.emacs.d/var/auto-save-list/saves-")
 '(backup-directory-alist (quote ((".*" . "~/var/emacs/backups/"))))
 '(blink-cursor-mode nil)
 '(buffers-menu-max-size 30)
 '(buffers-menu-show-directories nil)
 '(buffers-menu-show-status nil)
 '(c-echo-syntactic-information-p t)
 '(clean-buffer-list-delay-general 1)
 '(coffee-command "/usr/bin/coffee")
 '(coffee-tab-width 2)
 '(column-number-mode t)
 '(compilation-ask-about-save t)
 '(compilation-auto-jump-to-first-error nil)
 '(compilation-save-buffers-predicate nil)
 '(compilation-scroll-output t)
 '(compilation-skip-threshold 2)
 '(compilation-skip-visited t)
 '(compilation-window-height 3)
 '(completions-format (quote vertical))
 '(custom-buffer-done-kill t)
 '(custom-enabled-themes (quote (pdklburn)))
 '(custom-magic-show-button nil)
 '(custom-safe-themes (quote ("a60c86f793e9f6926044e53ddfe48c3443dd4e04" "d818d364712b551c535b952b3aa089c5941ef284" "a677b91598bc31bc159847fa2a3c0f525c7bf5bb" "39327baac0e924fc06c561986ed6fff862df8e1d" "69546801bd9c98eeb7246a3d39497abeced1d11e" "bf5b179a9e82b3e818b938a041363632a8b4f805" "7fe1e3de3e04afc43f9a3d3a8d38cd0a0efd9d4c" "b360396afb94cd6b0b05440c6178d3c78a2acf00" "e254937cba0f82c2d9eb3189a60748df9e486522" "69349beba557a65bb06f89b28b8fd2890c742f07" "d14db41612953d22506af16ef7a23c4d112150e5" "1caf2982385495191d2425ee51fc791ae75cde47" "1f392dc4316da3e648c6dc0f4aad1a87d4be556c" "485737acc3bedc0318a567f1c0f5e7ed2dfde3fb" "1440d751f5ef51f9245f8910113daee99848e2c0" "5f573dfd6ef8f90d0c33de7d482daba81399f276" default)))
 '(delete-active-region (quote kill))
 '(display-buffer-reuse-frames t)
 '(electric-pair-mode nil)
 '(enable-local-eval t)
 '(enable-local-variables :all)
 '(ffap-require-prefix t)
 '(file-name-at-point-functions nil)
 '(file-precious-flag t)
 '(find-file-run-dired nil)
 '(find-file-visit-truename t)
 '(flymake-log-file-name "~/.emacs.d/var/flymake.log")
 '(fringe-mode (quote (4 . 4)) nil (fringe))
 '(global-hl-line-mode nil)
 '(global-pretty-lambda-mode t)
 '(gnuplot-display-process (quote frame))
 '(gnuplot-gui-fontname-list (quote (" " "\"terminus\"" "\"Helvetica\"" "\"Times-Roman\"")))
 '(gnuplot-info-display (quote frame))
 '(graphviz-dot-auto-indent-on-braces t)
 '(graphviz-dot-indent-width 4)
 '(ido-default-buffer-method (quote selected-window))
 '(ido-enable-dot-prefix nil)
 '(ido-enable-prefix nil)
 '(ido-enable-tramp-completion t)
 '(ido-everywhere nil)
 '(ido-max-window-height 3)
 '(ido-record-ftp-work-directories nil)
 '(ido-rotate-file-list-default t)
 '(ido-save-directory-list-file "~/.emacs.d/var/ido.last")
 '(ido-use-url-at-point t)
 '(indicate-empty-lines t)
 '(inhibit-startup-echo-area-message "endymion")
 '(initial-buffer-choice t)
 '(initial-scratch-message nil)
 '(jabber-account-list (quote (("emacs@thoughtnoise.net" (:password . "PEk7cMcoPvjeah3W") (:network-server . "localhost") (:port . 5222) (:connection-type . network)))))
 '(jabber-backlog-days nil)
 '(jabber-mode-line-mode t)
 '(js-enabled-frameworks (quote (javascript)))
 '(js3-allow-keywords-as-property-names nil)
 '(js3-auto-indent-p t)
 '(js3-compact-infix t)
 '(js3-enter-indents-newline t)
 '(js3-highlight-level 3)
 '(js3-include-gears-externs nil)
 '(js3-include-rhino-externs nil)
 '(js3-indent-dots t)
 '(js3-language-version 160)
 '(js3-lazy-commas t)
 '(js3-lazy-dots t)
 '(js3-lazy-operators t)
 '(js3-mode-escape-quotes nil)
 '(js3-pretty-vars nil)
 '(kept-old-versions 5)
 '(kill-do-not-save-duplicates t)
 '(markdown-command "redcarpet")
 '(midnight-delay 36000)
 '(midnight-mode t nil (midnight))
 '(mouse-avoidance-mode (quote banish) nil (avoid))
 '(mpc-mpd-music-directory "/mp3/albums")
 '(nroff-electric-mode t)
 '(nxhtml-skip-welcome t)
 '(nxhtml-validation-headers-check (quote html-empty))
 '(nxml-sexp-element-flag t)
 '(popwin:popup-window-height 8)
 '(prelude-disable-arrow-navigation nil)
 '(prelude-start-slime-automatically nil)
 '(pretty-lambda-auto-modes (quote (lisp-mode emacs-lisp-mode lisp-interaction-mode scheme-mode ruby-mode)))
 '(read-buffer-completion-ignore-case t)
 '(read-file-name-completion-ignore-case t)
 '(recentf-auto-cleanup "8:00am")
 '(recentf-max-menu-items 16)
 '(recentf-max-saved-items 64)
 '(recentf-save-file "~/.emacs.d/var/recentf")
 '(require-final-newline t)
 '(rng-schema-locating-files (quote ("schemas.xml" "/usr/share/emacs/24.0.94/etc/schema/schemas.xml" "/home/endymion/.emacs.d/rnc/html5/html5-schemas.xml")))
 '(ruby-block-highlight-toggle t)
 '(ruby-deep-indent-paren t)
 '(safe-local-variable-values (quote ((comp . make) (encoding . utf-8))))
 '(save-place-file "~/.emacs.d/var/saveplace")
 '(savehist-file "~/.emacs.d/var/savehist")
 '(scroll-bar-mode (quote right))
 '(scss-compile-at-save nil)
 '(sh-backslash-align t)
 '(sh-backslash-column 72)
 '(show-paren-mode t)
 '(show-paren-style (quote parenthesis))
 '(size-indication-mode t)
 '(smex-auto-update t)
 '(smex-key-advice-ignore-menu-bar t)
 '(smex-save-file "~/.emacs.d/var/smex-items")
 '(sql-database "postgresql")
 '(sql-electric-stuff (quote semicolon))
 '(sql-pop-to-buffer-after-send-region t)
 '(sql-product (quote postgres))
 '(sql-user "endymion")
 '(text-mode-hook (quote (turn-on-auto-fill prelude-turn-on-flyspell text-mode-hook-identify)))
 '(tool-bar-mode nil)
 '(tramp-auto-save-directory "~/var/emacs/autosave-tramp")
 '(tramp-default-host "thoughtnoise.net")
 '(tramp-default-method "scpc")
 '(tramp-smb-conf nil)
 '(url-cache-directory "~/.emacs.d/var/url/cache")
 '(url-cookie-file "~/.emacs.d/var/url/cookies")
 '(url-history-file "~/.emacs.d/var/url/history")
 '(visual-line-fringe-indicators (quote (left-curly-arrow right-curly-arrow)))
 '(whitespace-action (quote (auto-cleanup warn-if-read-only)))
 '(whitespace-display-mappings nil)
 '(whitespace-style (quote (trailing empty)))
 '(widget-choice-toggle t)
 '(windmove-wrap-around t)
 '(x-gtk-whole-detached-tool-bar nil)
 '(xterm-mouse-mode t))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#0b0b0b" :foreground "#92b6f4" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 116 :width normal :foundry "unknown" :family "Dina"))))
 '(erm-syn-errline ((t (:box nil :strike-through "firebrick1" :underline "red"))))
 '(erm-syn-warnline ((t (:box nil :strike-through "gold" :underline "orange"))))
 '(flymake-errline ((t (:background "#30160c" :underline "firebrick"))))
 '(ido-subdir ((t (:foreground "RoyalBlue2" :weight bold))))
 '(jabber-activity-face ((t (:background "salmon" :foreground "gray5" :box (:line-width 2 :color "SteelBlue3" :style pressed-button) :weight bold))))
 '(jabber-activity-personal-face ((t (:background "black" :foreground "lime green" :box (:line-width 1 :color "forest green")))))
 '(jabber-chat-error ((t (:background "dark red" :foreground "light goldenrod yellow" :weight normal))))
 '(jabber-chat-prompt-foreign ((t (:foreground "firebrick" :slant normal :weight bold))))
 '(jabber-chat-prompt-local ((t (:foreground "RoyalBlue3" :weight bold))))
 '(jabber-chat-prompt-system ((t (:foreground "MediumPurple2" :weight bold))))
 '(jabber-chat-text-foreign ((t (:background "gray12" :foreground "LavenderBlush1"))))
 '(jabber-chat-text-local ((t (:background "gray0" :foreground "green3"))))
 '(jabber-rare-time-face ((t (:foreground "DarkGoldenrod3" :underline t))))
 '(jabber-roster-user-away ((t (:foreground "slate blue" :slant normal :weight normal))))
 '(jabber-roster-user-chatty ((t (:foreground "chartreuse" :slant normal :weight bold))))
 '(jabber-roster-user-dnd ((t (:foreground "red4" :slant normal :weight normal))))
 '(jabber-roster-user-error ((t (:background "firebrick" :foreground "thistle" :slant italic :weight light))))
 '(jabber-roster-user-offline ((t (:foreground "dim gray" :slant normal :weight normal))))
 '(jabber-roster-user-online ((t (:foreground "SeaGreen1" :slant normal :weight bold))))
 '(jabber-roster-user-xa ((t (:foreground "dark violet" :slant normal :weight normal))))
 '(jabber-title-large ((t (:inherit variable-pitch :background "dark slate blue" :foreground "white" :box (:line-width 1 :color "royal blue") :weight normal :height 3.0 :family "Kelly Slab"))))
 '(jabber-title-medium ((t (:inherit variable-pitch :background "SlateBlue4" :foreground "honeydew" :weight bold :height 2.0 :width normal :family "Primer"))))
 '(jabber-title-small ((t (:background "dark slate blue" :foreground "CadetBlue1" :box (:line-width 2 :color "purple4" :style pressed-button) :family "peep"))))
 '(mumamo-background-chunk-major ((t (:background "#0d0b1d"))))
 '(mumamo-background-chunk-submode1 ((t (:background "#002448"))))
 '(mumamo-background-chunk-submode2 ((t (:background "#0d4c38"))))
 '(mumamo-background-chunk-submode3 ((t (:background "#44400F"))))
 '(mumamo-background-chunk-submode4 ((t (:background "#3E1D0A"))))
 '(mumamo-region ((t (:background "#00363b"))))
 '(nxml-tag-delimiter ((t (:inherit font-lock-constant-face))))
 '(nxml-tag-slash ((t (:foreground "SlateBlue"))))
 '(ruby-op-face ((t (:background "#27132b" :foreground "#91a0ff" :weight semi-bold))))
 '(variable-pitch ((t (:inherit default :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight thin :height 92 :width normal :foundry "unknown" :family "ubuntu"))))
 '(vhl/default-face ((t (:background "#2e134d")))))
